num_directors = sum(role == 'director'),
actors_list = toString(unique(first_name[role == 'actor'])),
actresses_list = toString(unique(first_name[role == 'actress'])),
directors_list = toString(unique(first_name[role == 'director']))
)
role_report <- roles %>%
left_join(movies, by = "id") %>%
left_join(actors, by = "actor_id") %>%
left_join(directors, by = "director_id") %>%
group_by(role) %>%
summarise(
num_movies = n_distinct(id),
num_actors = sum(role == 'actor'),
num_actresses = sum(role == 'actress'),
num_directors = sum(role == 'director'),
actors_list = toString(unique(first_name[role == 'actor'])),
actresses_list = toString(unique(first_name[role == 'actress'])),
directors_list = toString(unique(first_name[role == 'director']))
)
role_report <- roles %>%
left_join(movies, by = "movie_id") %>%
left_join(actors, by = "actor_id") %>%
left_join(directors, by = "director_id") %>%
group_by(role) %>%
summarise(
num_movies = n_distinct(movie_id),
num_actors = sum(role == 'actor'),
num_actresses = sum(role == 'actress'),
num_directors = sum(role == 'director'),
actors_list = toString(unique(first_name[role == 'actor'])),
actresses_list = toString(unique(first_name[role == 'actress'])),
directors_list = toString(unique(first_name[role == 'director']))
)
# Verificar nombres de columnas
colnames(movies)
colnames(roles)
# Si el nombre de la columna en movies es diferente, cámbialo a 'movie_id'
colnames(movies)[colnames(movies) == 'id'] <- 'movie_id'  # Ajusta esto según corresponda
# Ahora realiza la unión con el nombre de columna correcto
role_report <- roles %>%
left_join(movies, by = "movie_id") %>%
left_join(actors, by = "actor_id") %>%
left_join(directors, by = "director_id") %>%
group_by(role) %>%
summarise(
num_movies = n_distinct(movie_id),
num_actors = sum(role == 'actor'),
num_actresses = sum(role == 'actress'),
num_directors = sum(role == 'director'),
actors_list = toString(unique(first_name[role == 'actor'])),
actresses_list = toString(unique(first_name[role == 'actress'])),
directors_list = toString(unique(first_name[role == 'director']))
)
library(dplyr)
# Cargar los datos
movies <- read.csv('C:/Users/barri/Documents/UFM/2024/Segundo Semestre/Data Wrangling/Análisis IMDb con R/movies.csv')
directors <- read.csv('C:/Users/barri/Documents/UFM/2024/Segundo Semestre/Data Wrangling/Análisis IMDb con R/directors.csv')
actors <- read.csv('C:/Users/barri/Documents/UFM/2024/Segundo Semestre/Data Wrangling/Análisis IMDb con R/actors.csv')
roles <- read.csv('C:/Users/barri/Documents/UFM/2024/Segundo Semestre/Data Wrangling/Análisis IMDb con R/roles.csv')
# Ajustar los nombres de las columnas
colnames(movies)[colnames(movies) == 'id'] <- 'movie_id'
colnames(actors)[colnames(actors) == 'id'] <- 'actor_id'  # Ajusta esto si es necesario
# Generar el reporte por Role incluyendo actores y directores
role_report <- roles %>%
left_join(movies, by = "movie_id") %>%
left_join(actors, by = "actor_id") %>%
left_join(directors, by = "director_id") %>%
group_by(role) %>%
summarise(
num_movies = n_distinct(movie_id),
num_actors = sum(role == 'actor'),
num_actresses = sum(role == 'actress'),
num_directors = sum(role == 'director'),
actors_list = toString(unique(name[role == 'actor'])),
actresses_list = toString(unique(name[role == 'actress'])),
directors_list = toString(unique(name[role == 'director']))
)
# Calcular el número de películas por rol
peliculas_por_rol <- roles %>%
group_by(role) %>%
summarise(num_peliculas = n_distinct(movie_id))
# Actores por rol
actores_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "actor_id")) %>%
filter(gender == 'M') %>%
group_by(role) %>%
summarise(num_actores = n_distinct(actor_id))
# Número de actrices por rol
actrices_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "actor_id")) %>%
filter(gender == 'F') %>%
group_by(role) %>%
summarise(num_actrices = n_distinct(actor_id))
# Directores por rol
directores_por_rol <- roles %>%
left_join(movies_directors, by = "movie_id") %>%
group_by(role) %>%
summarise(num_directores = n_distinct(director_id))
# Combinar todos los reportes en un solo reporte por rol
reporte_por_rol <- peliculas_por_rol %>%
left_join(actores_por_rol, by = "role") %>%
left_join(actrices_por_rol, by = "role") %>%
left_join(directores_por_rol, by = "role")
# Llenar los valores NA con 0
reporte_por_rol <- reporte_por_rol %>%
mutate(
num_actores = ifelse(is.na(num_actores), 0, num_actores),
num_actrices = ifelse(is.na(num_actrices), 0, num_actrices),
num_directores = ifelse(is.na(num_directores), 0, num_directores)
)
# Mostrar el reporte
print(reporte_por_rol)
director_report <- movies_directors %>%
left_join(directors, by = c("director_id" = "id")) %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id, first_name, last_name) %>%
summarise(
num_movies_directed = n_distinct(movie_id),
num_actors_worked_with = n_distinct(actor_id),
most_common_genre = movies_genres %>%
filter(movie_id %in% unique(movie_id)) %>%
count(genre) %>%
top_n(1, n) %>%
pull(genre)
)
# Calcular el número de películas dirigidas por cada director
peliculas_por_director <- movies_directors %>%
group_by(director_id) %>%
summarise(num_peliculas = n_distinct(movie_id))
# Calcular el número de actores que han trabajado con cada director
actores_por_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(num_actores = n_distinct(actor_id))
# Calcular el género más común por director
genero_comun_por_director <- movies_directors %>%
left_join(movies_genres, by = "movie_id") %>%
group_by(director_id, genre) %>%
summarise(num_peliculas_genero = n()) %>%
slice_max(num_peliculas_genero, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(director_id, genre)
# Unir todo en el reporte final por director
reporte_directores <- directors %>%
left_join(peliculas_por_director, by = c("id" = "director_id")) %>%
left_join(actores_por_director, by = c("id" = "director_id")) %>%
left_join(genero_comun_por_director, by = c("id" = "director_id"))
# Mostrar el reporte
print(reporte_directores)
library(dplyr)
# Calcular el número de películas dirigidas por cada director
peliculas_por_director <- movies_directors %>%
group_by(director_id) %>%
summarise(num_peliculas = n_distinct(movie_id))
# Calcular el número de actores que han trabajado con cada director
actores_por_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(num_actores = n_distinct(actor_id))
# Calcular el género más común por director
genero_comun_por_director <- movies_directors %>%
left_join(movies_genres, by = "movie_id") %>%
group_by(director_id, genre) %>%
summarise(num_peliculas_genero = n()) %>%
slice_max(num_peliculas_genero, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(director_id, genre)
# Unir todo en el reporte final por director
reporte_directores <- directors %>%
left_join(peliculas_por_director, by = c("id" = "director_id")) %>%
left_join(actores_por_director, by = c("id" = "director_id")) %>%
left_join(genero_comun_por_director, by = c("id" = "director_id"))
# Reemplazar valores NA con 0 o cadena vacía
reporte_directores <- reporte_directores %>%
mutate(
num_peliculas = ifelse(is.na(num_peliculas), 0, num_peliculas),
num_actores = ifelse(is.na(num_actores), 0, num_actores),
genre = ifelse(is.na(genre), "", genre)
)
# Mostrar el reporte
print(reporte_directores)
# Distribución de roles por película
role_distribution_movie <- roles %>%
group_by(movie_id, role) %>%
summarise(total = n()) %>%
spread(role, total, fill = 0)
hist_people_per_movie <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(movie_id) %>%
summarise(
num_actores = n_distinct(actor_id[role == 'actor']),
num_actrices = n_distinct(actor_id[role == 'actress']),
num_directores = n_distinct(director_id)
) %>%
ungroup() %>%
summarise(
num_actores_total = sum(num_actores),
num_actrices_total = sum(num_actrices),
num_directores_total = sum(num_directores)
)
# Calculamos el porcentaje y el porcentaje acumulado para cada tipo (actores, actrices, directores)
hist_people_per_movie <- hist_people_per_movie %>%
mutate(
total_people = num_actores_total + num_actrices_total + num_directores_total,
actores_pct = round(100.0 * num_actores_total / total_people, 1),
actrices_pct = round(100.0 * num_actrices_total / total_people, 1),
directores_pct = round(100.0 * num_directores_total / total_people, 1),
actores_cumulative = actores_pct,
actrices_cumulative = actores_cumulative + actrices_pct,
directores_cumulative = actrices_cumulative + directores_pct
)
# Imprimimos el resumen de la distribución
print(hist_people_per_movie)
dist_roles_pelicula <- roles %>%
group_by(movie_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_movies = n()) %>%
arrange(n_roles)
# 2. Calcular la distribución de roles por director
dist_roles_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_directors = n()) %>%
arrange(n_roles)
# 3. Combinar ambas tablas en una sola
dist_roles_combined <- full_join(dist_roles_pelicula, dist_roles_director, by = "n_roles") %>%
arrange(n_roles)
# Rellenar los valores NA con 0
dist_roles_combined <- dist_roles_combined %>%
mutate(
n_movies = ifelse(is.na(n_movies), 0, n_movies),
n_directors = ifelse(is.na(n_directors), 0, n_directors)
)
# Mostrar la tabla combinada
print(dist_roles_combined)
duplicated_movies <- movies %>% filter(duplicated(id))
# Calcular el total de películas y directores, excluyendo duplicados si existen
total_movies <- movies %>% distinct(id) %>% nrow()
library(dplyr)
# Verificar si existen duplicados en las tablas
duplicated_movies <- movies %>% filter(duplicated(movie_id))
duplicated_directors <- directors %>% filter(duplicated(director_id))
library(dplyr)
# Verificar si existen duplicados en las tablas
# Calcular el total de películas y directores, excluyendo duplicados si existen
total_movies <- movies %>% distinct(movie_id) %>% nrow()
total_directors <- directors %>% distinct(director_id) %>% nrow()
library(dplyr)
# Verificar si existen duplicados en las tablas
# Calcular el total de películas y directores, excluyendo duplicados si existen
total_movies <- movies %>% distinct(movie_id) %>% nrow()
total_directors <- directors %>% distinct(id) %>% nrow()
# Mostrar un resumen completo
resumen <- tibble(
Total_Peliculas = total_movies,
Peliculas_Duplicadas = nrow(duplicated_movies),
Total_Directores = total_directors,
Directores_Duplicados = nrow(duplicated_directors)
)
library(dplyr)
# Verificar si existen duplicados en las tablas
# Calcular el total de películas y directores, excluyendo duplicados si existen
total_movies <- movies %>% distinct(movie_id) %>% nrow()
total_directors <- directors %>% distinct(id) %>% nrow()
# Mostrar un resumen completo
resumen <- tibble(
Total_Peliculas = total_movies,
Total_Directores = total_directors,
)
print(resumen)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
total_movies <- movies %>% distinct(movie_id) %>% nrow()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
total_movies <- movies %>% distinct(movie_id) %>% nrow()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
total_movies <- movies %>% distinct(id) %>% nrow()
total_directors <- directors %>% distinct(id) %>% nrow()
resumen <- tibble(
Total_Peliculas = total_movies,
Total_Directores = total_directors,
)
print(resumen)
avg_genres_per_director <- directors_genres %>%
group_by(director_id) %>%
summarise(total_genres = n()) %>%
summarise(avg_genres = mean(total_genres))
avg_genres_per_director
peliculas_por_rol <- roles %>%
group_by(role) %>%
summarise(num_peliculas = n_distinct(movie_id))
actores_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "actor_id")) %>%
filter(gender == 'M') %>%
group_by(role) %>%
summarise(num_actores = n_distinct(actor_id))
peliculas_por_rol <- roles %>%
group_by(role) %>%
summarise(num_peliculas = n_distinct(movie_id))
actores_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "id")) %>%
filter(gender == 'M') %>%
group_by(role) %>%
summarise(num_actores = n_distinct(actor_id))
actrices_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "id")) %>%
filter(gender == 'F') %>%
group_by(role) %>%
summarise(num_actrices = n_distinct(actor_id))
directores_por_rol <- roles %>%
left_join(movies_directors, by = "movie_id") %>%
group_by(role) %>%
summarise(num_directores = n_distinct(director_id))
reporte_por_rol <- peliculas_por_rol %>%
left_join(actores_por_rol, by = "role") %>%
left_join(actrices_por_rol, by = "role") %>%
left_join(directores_por_rol, by = "role")
reporte_por_rol <- reporte_por_rol %>%
mutate(
num_actores = ifelse(is.na(num_actores), 0, num_actores),
num_actrices = ifelse(is.na(num_actrices), 0, num_actrices),
num_directores = ifelse(is.na(num_directores), 0, num_directores)
)
print(reporte_por_rol)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
total_movies <- movies %>% distinct(id) %>% nrow()
total_directors <- directors %>% distinct(id) %>% nrow()
resumen <- tibble(
Total_Peliculas = total_movies,
Total_Directores = total_directors,
)
print(resumen)
avg_genres_per_director <- directors_genres %>%
group_by(director_id) %>%
summarise(total_genres = n()) %>%
summarise(avg_genres = mean(total_genres))
avg_genres_per_director
peliculas_por_rol <- roles %>%
group_by(role) %>%
summarise(num_peliculas = n_distinct(movie_id))
actores_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "id")) %>%
filter(gender == 'M') %>%
group_by(role) %>%
summarise(num_actores = n_distinct(actor_id))
actrices_por_rol <- roles %>%
left_join(actors, by = c("actor_id" = "id")) %>%
filter(gender == 'F') %>%
group_by(role) %>%
summarise(num_actrices = n_distinct(actor_id))
directores_por_rol <- roles %>%
left_join(movies_directors, by = "movie_id") %>%
group_by(role) %>%
summarise(num_directores = n_distinct(director_id))
reporte_por_rol <- peliculas_por_rol %>%
left_join(actores_por_rol, by = "role") %>%
left_join(actrices_por_rol, by = "role") %>%
left_join(directores_por_rol, by = "role")
reporte_por_rol <- reporte_por_rol %>%
mutate(
num_actores = ifelse(is.na(num_actores), 0, num_actores),
num_actrices = ifelse(is.na(num_actrices), 0, num_actrices),
num_directores = ifelse(is.na(num_directores), 0, num_directores)
)
print(reporte_por_rol)
peliculas_por_director <- movies_directors %>%
group_by(director_id) %>%
summarise(num_peliculas = n_distinct(movie_id))
actores_por_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(num_actores = n_distinct(actor_id))
genero_comun_por_director <- movies_directors %>%
left_join(movies_genres, by = "movie_id") %>%
group_by(director_id, genre) %>%
summarise(num_peliculas_genero = n()) %>%
slice_max(num_peliculas_genero, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(director_id, genre)
reporte_directores <- directors %>%
left_join(peliculas_por_director, by = c("id" = "director_id")) %>%
left_join(actores_por_director, by = c("id" = "director_id")) %>%
left_join(genero_comun_por_director, by = c("id" = "director_id"))
reporte_directores <- reporte_directores %>%
mutate(
num_peliculas = ifelse(is.na(num_peliculas), 0, num_peliculas),
num_actores = ifelse(is.na(num_actores), 0, num_actores),
genre = ifelse(is.na(genre), "", genre)
)
print(reporte_directores)
dist_roles_pelicula <- roles %>%
group_by(movie_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_movies = n()) %>%
arrange(n_roles)
dist_roles_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_directors = n()) %>%
arrange(n_roles)
dist_roles_combined <- full_join(dist_roles_pelicula, dist_roles_director, by = "n_roles") %>%
arrange(n_roles)
dist_roles_combined <- dist_roles_combined %>%
mutate(
n_movies = ifelse(is.na(n_movies), 0, n_movies),
n_directors = ifelse(is.na(n_directors), 0, n_directors)
)
print(dist_roles_combined)
peliculas_por_director <- movies_directors %>%
group_by(director_id) %>%
summarise(num_peliculas = n_distinct(movie_id))
actores_por_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(num_actores = n_distinct(actor_id))
genero_comun_por_director <- movies_directors %>%
left_join(movies_genres, by = "movie_id") %>%
group_by(director_id, genre) %>%
summarise(num_peliculas_genero = n()) %>%
slice_max(num_peliculas_genero, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(director_id, genre)
reporte_directores <- directors %>%
left_join(peliculas_por_director, by = c("id" = "director_id")) %>%
left_join(actores_por_director, by = c("id" = "director_id")) %>%
left_join(genero_comun_por_director, by = c("id" = "director_id"))
reporte_directores <- reporte_directores %>%
mutate(
num_peliculas = ifelse(is.na(num_peliculas), 0, num_peliculas),
num_actores = ifelse(is.na(num_actores), 0, num_actores),
genre = ifelse(is.na(genre), "", genre)
)
print(reporte_directores)
dist_roles_pelicula <- roles %>%
group_by(movie_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_movies = n()) %>%
arrange(n_roles)
dist_roles_director <- movies_directors %>%
left_join(roles, by = "movie_id") %>%
group_by(director_id) %>%
summarise(n_roles = n_distinct(role)) %>%
group_by(n_roles) %>%
summarise(n_directors = n()) %>%
arrange(n_roles)
dist_roles_combined <- full_join(dist_roles_pelicula, dist_roles_director, by = "n_roles") %>%
arrange(n_roles)
dist_roles_combined <- dist_roles_combined %>%
mutate(
n_movies = ifelse(is.na(n_movies), 0, n_movies),
n_directors = ifelse(is.na(n_directors), 0, n_directors)
)
print(dist_roles_combined)
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
movies <- read.csv('movies.csv')
directors <- read.csv('directors.csv')
directors_genres <- read.csv('directors_genres.csv')
movies_directors <- read.csv('movies_directors.csv')
actors <- read.csv('actors.csv')
roles <- read.csv('roles.csv')
movies_genres <- read.csv('movies_genres.csv')
total_movies <- movies %>% distinct(id) %>% nrow()
total_directors <- directors %>% distinct(id) %>% nrow()
resumen <- tibble(
Total_Peliculas = total_movies,
Total_Directores = total_directors,
)
print(resumen)
